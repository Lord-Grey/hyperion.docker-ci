ARG SUITE="buster"
ARG UPGRADE_TO_TRIXIE="false"
ARG QT_VERSION="5"
ARG REPOSITORY="https://github.com/hyperion-project"
ARG CMAKE_VERSION="3.28.3"

FROM balenalib/rpi-raspbian:${SUITE}

ARG SUITE
ARG UPGRADE_TO_TRIXIE
ARG QT_VERSION
ARG REPOSITORY
ARG CMAKE_VERSION
ARG DEBIAN_FRONTEND=noninteractive
ARG TARGETPLATFORM

ENV QEMU_EXECVE=1
ENV TARGETPLATFORM=${TARGETPLATFORM:-linux/arm/v6}

# update
RUN apt-get update

# upgrade from Bookworm to Trixie
RUN if [ "$UPGRADE_TO_TRIXIE" = "true" ]; then \
    apt-get dist-upgrade; \
    sed -i -e 's/bookworm/trixie/g' /etc/apt/sources.list; \
    apt update && apt-get -y full-upgrade && apt -y clean && apt -y autoremove; \
fi

# install qt5 or qt6 (qt6 is not available on debian buster/bullseye)
RUN if [ "$SUITE" = "bookworm" ] && [ "$QT_VERSION" = "6" ]; then \
    apt-get -y install qt6-base-dev libqt6sql6-sqlite qt6-serialport-dev qt6-websockets-dev libxkbcommon-dev libvulkan-dev libgl1-mesa-dev; \
else \
    apt-get -y install qtbase5-dev libqt5serialport5-dev libqt5websockets5-dev libqt5sql5-sqlite libqt5svg5-dev; \
fi

# install deps
RUN apt-get -y install \
    devscripts \
    fakeroot \
    debhelper \
    libdistro-info-perl \
    git \
    curl \
    python3-dev \
    build-essential \
    ninja-build \
    libusb-1.0-0-dev \
    libcec-dev \
    libp8-platform-dev \
    libudev-dev \
    libavahi-core-dev \
    libavahi-compat-libdnssd-dev \
    zlib1g-dev \
    libasound2-dev \
    libjpeg-dev \
    libturbojpeg0-dev \
    libmbedtls-dev \
    libftdi1-dev \
    libssl-dev \
    libraspberrypi-dev \
    libglib2.0-dev

# Compile and install CMake
ENV CMAKE_URL="https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}"
RUN mkdir -p /tmp/cmake; \
    cd /tmp/cmake; \
    curl -kL ${CMAKE_URL}.tar.gz | tar zxf - -C . --strip-components 1; \
    sed -i -e 's/|aarch64//g' Source/Checks/cm_cxx_features.cmake; \
    ./bootstrap --prefix=/usr --parallel=`nproc`; \
    make -j `nproc`; \
    make install; \
    cd && rm -rf /tmp/cmake

# Show cmake version
RUN cmake --version

# download qemu and set exec flag
RUN curl -kL https://github.com/balena-io/qemu/releases/download/v7.0.0%2Bbalena1/qemu-7.0.0.balena1-arm.tar.gz | tar zxvf - -C . --strip-components 1 && mv qemu-arm-static /usr/bin/qemu-static

# set qemu exec flag
RUN chmod +x /usr/bin/qemu-static

# set entrypoint
ENTRYPOINT [ "/usr/bin/qemu-static" ]
