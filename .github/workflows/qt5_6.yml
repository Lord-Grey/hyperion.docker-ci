name: GitHub Packages Qt5/6 Builds

on:
  # Reusable from package.yml
  workflow_call:
    inputs:
      distribution:
        type: string
        default: 'ubuntu'
        required: false
      codename:
        type: string
        default: 'focal'
        required: false
      qt_version:
        type: string
        default: '5'
        required: false
      target_platform:
        type: string
        default: "['amd64']"
        required: false

env:
  SECRET_DOCKER_CI: ${{ secrets.DOCKER_CI }}
  REPOSITORY: hyperion-project
  CMAKE_VERSION: 3.31.5

jobs:

  build_and_push:
    name: 👷 Build ${{ matrix.target_platform }}
    runs-on: ${{ matrix.target_platform == 'amd64' && 'ubuntu-22.04' || 'ubuntu-22.04-arm' }}
    strategy:
      fail-fast: false
      matrix:
        target_platform: ${{ fromJson(inputs.target_platform) }}
        target_lookup: [{ 'amd64': 'linux/amd64', 'arm64': 'linux/arm64', 'armv6': 'linux/arm/v6', 'armv7': 'linux/arm/v7' }]
        isBullseyeQt6:
          - ${{ inputs.distribution == 'debian' && inputs.codename == 'bullseye' && inputs.qt_version == '6' }}
        exclude:
          - isBullseyeQt6: true
            target_platform: 'armv6'

    steps:
      - name: 👀 Checkout
        uses: actions/checkout@v4

      - name: ✅ Determine current Repository
        if: ${{ !startsWith(github.repository, env.REPOSITORY) }}
        run: echo "REPOSITORY=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

      - name: 🛠️ Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GitHub Container Registry
        if: ${{ env.SECRET_DOCKER_CI != null }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_CI }}

      - name: 🐳 Set up Docker metadata
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.REPOSITORY }}/${{ inputs.distribution }}
          tags: type=sha

      - name: 👷 Build and 🚀 Push digest to GitHub Container/Package Registry
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.target_platform == 'armv6' && 'debian-armv6' || inputs.distribution == 'fedora' && 'fedora' || 'ubuntu_debian' }}
          platforms: ${{ matrix.target_lookup[format('{0}',matrix.target_platform)] }}
          provenance: false
          labels: ${{ steps.docker_metadata.outputs.labels }}
          annotations: ${{ steps.docker_metadata.outputs.annotations }}
          outputs: type=image,name=ghcr.io/${{ env.REPOSITORY }}/${{ inputs.distribution }},push-by-digest=true,name-canonical=true,push=true
          build-args: |
            DIST=${{ inputs.distribution }}
            SUITE=${{ inputs.codename }}
            QT_VERSION=${{ inputs.qt_version }}
            REPOSITORY="${{ github.server_url }}/${{ env.REPOSITORY }}"
            CMAKE_VERSION=${{ env.CMAKE_VERSION }}

      - name: ⬇ Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.docker_build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: 📦 Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.distribution }}-${{ inputs.codename }}-qt${{ inputs.qt_version }}-${{ matrix.target_platform }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: 👷 Merge and 🚀 Push
    needs: build_and_push
    runs-on: ubuntu-latest
    env:
      TAG: ${{ inputs.qt_version == '6' && format('{0}-qt6', inputs.codename) || inputs.codename }}

    steps:
      - name: 💾 Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: ${{ inputs.distribution }}-${{ inputs.codename }}-qt${{ inputs.qt_version }}-*
          merge-multiple: true

      - name: ✅ Determine current Repository
        if: ${{ !startsWith(github.repository, env.REPOSITORY) }}
        run: echo "REPOSITORY=$(echo '${{ github.actor }}' | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GitHub Container Registry
        if: ${{ env.SECRET_DOCKER_CI != null }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_CI }}

      - name: 📝 Create manifest list and 🚀 Push to GitHub Container/Package Registry
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create -t ghcr.io/${{ env.REPOSITORY }}/${{ inputs.distribution }}:${{ env.TAG }} $(printf 'ghcr.io/${{ env.REPOSITORY }}/${{ inputs.distribution }}@sha256:%s ' *)

      - name: 👀 Inspect image
        run: |
          docker buildx imagetools inspect ghcr.io/${{ env.REPOSITORY }}/${{ inputs.distribution }}:${{ env.TAG }}